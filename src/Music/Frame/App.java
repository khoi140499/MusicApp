/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Music.Frame;

import Music.Class.BaiHat;
import amusic.clas.FileTypeFilter;
import jaco.mp3.player.MP3Player;
import java.io.File;
import java.io.PrintWriter;
import static java.lang.Thread.sleep;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.Line;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.Mixer;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javazoom.jl.player.Player;
import org.jaudiotagger.audio.AudioFile;
import org.jaudiotagger.audio.AudioFileIO;

/**
 *
 * @author Dang Khoi
 */
public class App extends javax.swing.JFrame {

    /**
     * Creates new form App
     */
    File f1;
    File f2;
    File f3;
    ArrayList<BaiHat> bh=new ArrayList<BaiHat>();
    MP3Player player=new MP3Player();
    DefaultListModel dl=new DefaultListModel();
    Player playerr;
    Thread time;
    Thread slide;
    public App() {
        initComponents();
        setLocationRelativeTo(null);
        hien();
    }
    private void hien(){
        try {
            File f=new File("List.t");
            Scanner sc=new Scanner(f);
            while (sc.hasNext()) {
                BaiHat a=new BaiHat(sc.nextLine(), sc.nextLine());
                bh.add(a);
            }
        } catch (Exception e) {
        }
        for(BaiHat as:bh){
            String s=as.getTenBai();
            String[] arr=s.split(".mp3");
            dl.addElement(arr[0]);
            List1.setModel(dl);
        }
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        txtTenBai = new javax.swing.JTextField();
        txtTacGia = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        btnPrevious = new javax.swing.JLabel();
        btnPlay = new javax.swing.JLabel();
        btnNext = new javax.swing.JLabel();
        btnRepeat = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnVolum = new javax.swing.JLabel();
        chinhLoa = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTime2 = new javax.swing.JLabel();
        txtTime1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        List1 = new javax.swing.JList<>();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPlay = new javax.swing.JLabel();
        txtRepeat = new javax.swing.JLabel();
        txtHien = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setOpacity(0.97F);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(39, 32, 27));

        jPanel3.setBackground(new java.awt.Color(39, 32, 27));

        jPanel4.setBackground(new java.awt.Color(39, 32, 27));
        jPanel4.setPreferredSize(new java.awt.Dimension(137, 137));

        jLabel4.setBackground(new java.awt.Color(39, 32, 27));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music/IMG/kj.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(39, 32, 27));

        txtTenBai.setEditable(false);
        txtTenBai.setBackground(new java.awt.Color(39, 32, 27));
        txtTenBai.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTenBai.setForeground(new java.awt.Color(255, 255, 255));
        txtTenBai.setBorder(null);

        txtTacGia.setEditable(false);
        txtTacGia.setBackground(new java.awt.Color(39, 32, 27));
        txtTacGia.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtTacGia.setForeground(new java.awt.Color(255, 255, 255));
        txtTacGia.setBorder(null);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTenBai, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                    .addComponent(txtTacGia))
                .addGap(0, 0, 0))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(txtTenBai, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(39, 32, 27));

        btnPrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music/IMG/skip_to_start_30px.png"))); // NOI18N
        btnPrevious.setToolTipText("Previous");
        btnPrevious.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPreviousMouseClicked(evt);
            }
        });

        btnPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music/IMG/play_button_circled_35px.png"))); // NOI18N
        btnPlay.setToolTipText("Play");
        btnPlay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPlayMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPlayMouseEntered(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music/IMG/end_30px.png"))); // NOI18N
        btnNext.setToolTipText("Next");
        btnNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNextMouseEntered(evt);
            }
        });

        btnRepeat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music/IMG/reset_25px.png"))); // NOI18N
        btnRepeat.setToolTipText("Repeat");
        btnRepeat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRepeatMouseClicked(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music/IMG/add_25px.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        btnVolum.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music/IMG/sound_25px.png"))); // NOI18N
        btnVolum.setToolTipText("Volum");
        btnVolum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVolumMouseClicked(evt);
            }
        });

        chinhLoa.setBackground(new java.awt.Color(39, 32, 27));
        chinhLoa.setMaximum(10);
        chinhLoa.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chinhLoaStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Myriad Pro Light", 0, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Total Time:");

        jLabel6.setFont(new java.awt.Font("Myriad Pro Light", 0, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Play Rate:");

        txtTime2.setForeground(new java.awt.Color(255, 255, 255));
        txtTime2.setText("00:00");

        txtTime1.setForeground(new java.awt.Color(255, 255, 255));
        txtTime1.setText("00:00");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrevious)
                        .addGap(18, 18, 18)
                        .addComponent(btnPlay)
                        .addGap(18, 18, 18)
                        .addComponent(btnNext)
                        .addGap(18, 18, 18)
                        .addComponent(btnRepeat))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTime1)
                            .addComponent(txtTime2)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnVolum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chinhLoa, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTime2))
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTime1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVolum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chinhLoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPlay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrevious, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNext, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRepeat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane1.setBackground(new java.awt.Color(39, 32, 27));

        List1.setBackground(new java.awt.Color(234, 222, 206));
        List1.setFont(new java.awt.Font("Monotype Corsiva", 0, 14)); // NOI18N
        List1.setForeground(new java.awt.Color(39, 32, 27));
        List1.setSelectionBackground(new java.awt.Color(234, 222, 206));
        List1.setSelectionForeground(new java.awt.Color(86, 78, 255));
        List1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                List1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                List1MouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(List1);

        jPanel6.setBackground(new java.awt.Color(39, 32, 27));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("K-Player");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music/IMG/below_20px.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music/IMG/cancel_20px.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        txtPlay.setForeground(new java.awt.Color(39, 32, 27));
        txtPlay.setText("1");

        txtRepeat.setForeground(new java.awt.Color(39, 32, 27));
        txtRepeat.setText("1");

        txtHien.setFont(new java.awt.Font("Tahoma", 0, 1)); // NOI18N
        txtHien.setForeground(new java.awt.Color(39, 32, 27));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Music/IMG/musically_20px.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(110, 110, 110)
                .addComponent(txtPlay)
                .addGap(124, 124, 124)
                .addComponent(txtRepeat)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(txtHien)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel2)
                .addGap(0, 0, 0))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPlay)
                            .addComponent(txtRepeat)
                            .addComponent(txtHien))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private int x,y;
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        x=evt.getX();
        y=evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        setLocation(evt.getXOnScreen()-x, evt.getYOnScreen()-y);
    }//GEN-LAST:event_formMouseDragged

    private void List1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_List1MouseClicked
        String s1="";
        if(txtPlay.getText().equals("3")==true){
            player.stop();
            if(time.isAlive()==true){
                time.stop();
            }
        }
        
        String s=List1.getSelectedValue();
        for(BaiHat as:bh){
            if(as.getTenBai().equals(s+".mp3")==true){
                player=new MP3Player();
                File f=new File(as.getDuongDan());
                player.addToPlayList(f);
                player.play();
                s1=as.getDuongDan();
                        
                String[] arr=s.split(" - ");
                txtTenBai.setText(arr[0]);
                txtTacGia.setText(arr[1]);
                txtHien.setText(s);
                btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/pause_30px.png")));
                txtPlay.setText("3");
                btnPlay.setToolTipText("Pause");
            }
        }
        f1=new File(s1);
                time=new Thread(){
                    @Override
                    synchronized public void run(){
                        int n=0;
                        boolean f=true;
                        while(true){
                            for(int i=0;i<=playMe(f1);i++){
                                if(i<10){
                                    txtTime1.setText(n+":"+"0"+i);
                                }
                                else {
                                    if(i==60){
                                        n+=1;
                                        i=0;
                                    }
                                    if(n*60+i == playMe(f1)+1){
                                        ArrayList<String> st=new ArrayList<String>();
                                        for(BaiHat as:bh){
                                            st.add(as.getTenBai());
                                        }

                                        for(int k=0;k<st.size();k++){
                                            if(st.get(k).equals(txtHien.getText()+".mp3")==true){
                                                String s=st.get(k+1)+"";
                                                String[] arr=s.split(".mp3");
                                                txtHien.setText(arr[0]);
                                                List1.setSelectedIndex(k+1);
                                                break;
                                            }
                                            else if(st.get(st.size()-1).equals(txtHien.getText()+".mp3")==true){
                                                String s=st.get(k)+"";
                                                String[] arr=s.split(".mp3");
                                                txtHien.setText(arr[0]);
                                                List1.setSelectedIndex(k);
                                            }
                                        }
                                        String s2="";
                                        for(BaiHat as:bh){
                                            if(as.getTenBai().equalsIgnoreCase(txtHien.getText()+".mp3")){
                                                player=new MP3Player();
                                                File f11=new File(as.getDuongDan());
                                                player.addToPlayList(f11);
                                                player.play();
                                                btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/pause_30px.png")));
                                                txtPlay.setText("3");
                                                btnPlay.setToolTipText("Pause");
                                                s2=as.getDuongDan();

                                                String[] arr=txtHien.getText().split(" - ");
                                                txtTenBai.setText(arr[0]);
                                                txtTacGia.setText(arr[1]);

                                            }
                                        }
                                        f2=new File(s2);
                                        f1=f2;
                                        txtTime2.setText(playMe(f2)/60+":"+(playMe(f2)-(playMe(f2)/60)*60));
                                        n=0;
                                        i=0;
                                        break;
                                        }
                                    txtTime1.setText(n+":"+i+"");
                                }
                                try {
                                    sleep(1000);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                        }
                    }
                };
                time.start();
                txtTime2.setText(playMe(f1)/60+":"+(playMe(f1)-(playMe(f1)/60)*60));
    }//GEN-LAST:event_List1MouseClicked

    private void List1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_List1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_List1MouseEntered

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        setState(ICONIFIED);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void btnPreviousMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPreviousMouseClicked
        String s1="";
        if(txtPlay.getText().equalsIgnoreCase("3")){
            player.stop();
            if(time.isAlive()==true){
                time.stop();
            }
        }
        
        ArrayList<String> st =new ArrayList<String>();
        ArrayList<String> st1 =new ArrayList<String>();
        for(BaiHat as:bh){
            st.add(as.getTenBai());
        }
        
        Collections.reverse(st);
        for(String as:st){
            st1.add(as);
        }
        
         for(int i=0;i<st1.size();i++){
            if(st1.get(i).equals(txtHien.getText()+".mp3")==true){
                String s=st.get(i+1)+"";
                String[] arr=s.split(".mp3");
                txtHien.setText(arr[0]);
                List1.setSelectedValue(arr[0], true);
                break;
            }
            else if(st.get(st.size()-1).equals(txtHien.getText()+".mp3")==true){
                String s=st.get(i)+"";
                String[] arr=s.split(".mp3");
                txtHien.setText(arr[0]);
                List1.setSelectedValue(arr[0], true);
            }
        }
        
        for(BaiHat as:bh){
            if(as.getTenBai().equalsIgnoreCase(txtHien.getText()+".mp3")){
                player=new MP3Player();
                File f=new File(as.getDuongDan());
                player.addToPlayList(f);
                s1=as.getDuongDan();
                
                player.play();
                btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/pause_30px.png")));
                txtPlay.setText("3");
                btnPlay.setToolTipText("Pause");
            }
         }
                String[] arr=txtHien.getText().split(" - ");
                txtTenBai.setText(arr[0]);
                txtTacGia.setText(arr[1]);
         
                
        f1=new File(s1);
                time=new Thread(){
                    @Override
                    synchronized public void run(){
                        int n=0;
                        boolean f=true;
                        while(true){
                            for(int i=0;i<=playMe(f1);i++){
                                if(i<10){
                                    txtTime1.setText(n+":"+"0"+i);
                                }
                                else {
                                    if(i==60){
                                        n+=1;
                                        i=0;
                                    }
                                    if(n*60+i == playMe(f1)+1){
                                        ArrayList<String> st=new ArrayList<String>();
                                        for(BaiHat as:bh){
                                            st.add(as.getTenBai());
                                        }

                                        for(int k=0;k<st.size();k++){
                                            if(st.get(k).equals(txtHien.getText()+".mp3")==true){
                                                String s=st.get(k+1)+"";
                                                String[] arr=s.split(".mp3");
                                                txtHien.setText(arr[0]);
                                                List1.setSelectedIndex(k+1);
                                                break;
                                            }
                                            else if(st.get(st.size()-1).equals(txtHien.getText()+".mp3")==true){
                                                String s=st.get(k)+"";
                                                String[] arr=s.split(".mp3");
                                                txtHien.setText(arr[0]);
                                                List1.setSelectedIndex(k);
                                            }
                                        }
                                        String s2="";
                                        for(BaiHat as:bh){
                                            if(as.getTenBai().equalsIgnoreCase(txtHien.getText()+".mp3")){
                                                player=new MP3Player();
                                                File f11=new File(as.getDuongDan());
                                                player.addToPlayList(f11);
                                                player.play();
                                                btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/pause_30px.png")));
                                                txtPlay.setText("3");
                                                btnPlay.setToolTipText("Pause");
                                                s2=as.getDuongDan();

                                                String[] arr=txtHien.getText().split(" - ");
                                                txtTenBai.setText(arr[0]);
                                                txtTacGia.setText(arr[1]);

                                            }
                                        }
                                        f2=new File(s2);
                                        f1=f2;
                                        txtTime2.setText(playMe(f2)/60+":"+(playMe(f2)-(playMe(f2)/60)*60));
                                        n=0;
                                        i=0;
                                        break;
                                        }
                                    txtTime1.setText(n+":"+i+"");
                                }
                                try {
                                    sleep(1000);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                        }
                    }
                };
                time.start();
                txtTime2.setText(playMe(f1)/60+":"+(playMe(f1)-(playMe(f1)/60)*60));
    }//GEN-LAST:event_btnPreviousMouseClicked

    private void btnPlayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlayMouseClicked
        ArrayList<String> ar=new ArrayList<String>();
        String s="";
        String s1="";
        if(txtPlay.getText().equals("1")==true){
            if(txtRepeat.getText().equals("2")==true){
                
            }
            
            else {
                for(BaiHat as:bh){
                    ar.add(as.getTenBai());
                }

                for(int i=0;i<ar.size();i++){
                    s=ar.get(0);
                }

                for(BaiHat as:bh){
                    if(as.getTenBai().equalsIgnoreCase(s)==true){
                        player=new MP3Player();
                        File f=new File(as.getDuongDan());
                        player.addToPlayList(f);
                        player.play();
                        String[] arr=as.getTenBai().split(".mp3");
                        txtHien.setText(arr[0]);
                        s1=as.getDuongDan();

                        String[] arr1=arr[0].split(" - ");
                        txtTacGia.setText(arr1[1]);
                        txtTenBai.setText(arr1[0]);
                        List1.setSelectedValue(txtHien.getText(), true);
                        btnPlay.setToolTipText("Pause");
                        System.out.println(txtHien.getText());
                    }
                }
                txtPlay.setText("3");
                btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/pause_30px.png")));

                f1=new File(s1);
                time=new Thread(){
                    @Override
                    synchronized public void run(){
                        int n=0;
                        boolean f=true;
                        while(true){
                            for(int i=0;i<=playMe(f1);i++){
                                if(i<10){
                                    txtTime1.setText(n+":"+"0"+i);
                                }
                                else {
                                    if(i==60){
                                        n+=1;
                                        i=0;
                                    }
                                    if(n*60+i == playMe(f1)+1){
                                        ArrayList<String> st=new ArrayList<String>();
                                        for(BaiHat as:bh){
                                            st.add(as.getTenBai());
                                        }

                                        for(int k=0;k<st.size();k++){
                                            if(st.get(k).equals(txtHien.getText()+".mp3")==true){
                                                String s=st.get(k+1)+"";
                                                String[] arr=s.split(".mp3");
                                                txtHien.setText(arr[0]);
                                                List1.setSelectedIndex(k+1);
                                                break;
                                            }
                                            else if(st.get(st.size()-1).equals(txtHien.getText()+".mp3")==true){
                                                String s=st.get(k)+"";
                                                String[] arr=s.split(".mp3");
                                                txtHien.setText(arr[0]);
                                                List1.setSelectedIndex(k);
                                            }
                                        }
                                        String s2="";
                                        for(BaiHat as:bh){
                                            if(as.getTenBai().equalsIgnoreCase(txtHien.getText()+".mp3")){
                                                player=new MP3Player();
                                                File f11=new File(as.getDuongDan());
                                                player.addToPlayList(f11);
                                                player.play();
                                                btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/pause_30px.png")));
                                                txtPlay.setText("3");
                                                btnPlay.setToolTipText("Pause");
                                                s2=as.getDuongDan();

                                                String[] arr=txtHien.getText().split(" - ");
                                                txtTenBai.setText(arr[0]);
                                                txtTacGia.setText(arr[1]);

                                            }
                                        }
                                        f2=new File(s2);
                                        f1=f2;
                                        txtTime2.setText(playMe(f2)/60+":"+(playMe(f2)-(playMe(f2)/60)*60));
                                        n=0;
                                        i=0;
                                        break;
                                        }
                                    txtTime1.setText(n+":"+i+"");
                                }
                                try {
                                    sleep(1000);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                        }
                    }
                };
                time.start();
                txtTime2.setText(playMe(f1)/60+":"+(playMe(f1)-(playMe(f1)/60)*60));
                }
            }
        else if(txtPlay.getText().equals("3")==true){
            player.pause();
            txtPlay.setText("2");
            btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/play_button_circled_35px.png")));
            btnPlay.setToolTipText("Play");
            if(time.isAlive()==true){
                time.suspend();
            }
        }
        else if(txtPlay.getText().equals("2")==true){
            player.play();
            txtPlay.setText("3");
            btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/pause_30px.png")));
            btnPlay.setToolTipText("Pause");
            time.resume();
        }
    }//GEN-LAST:event_btnPlayMouseClicked

    private void btnPlayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPlayMouseEntered

    }//GEN-LAST:event_btnPlayMouseEntered

    private void btnNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNextMouseClicked
        String s1="";
        if(txtPlay.getText().equalsIgnoreCase("3")==true){
                player.stop();
                if(time.isAlive()==true){
                    time.stop();
                }
            }
        
            ArrayList<String> st=new ArrayList<String>();
            for(BaiHat as:bh){
                st.add(as.getTenBai());
            }
        
            for(int i=0;i<st.size();i++){
                if(st.get(i).equals(txtHien.getText()+".mp3")==true){
                    String s=st.get(i+1)+"";
                    String[] arr=s.split(".mp3");
                    txtHien.setText(arr[0]);
                    List1.setSelectedIndex(i+1);
                    break;
                }
                else if(st.get(st.size()-1).equals(txtHien.getText()+".mp3")==true){
                    String s=st.get(i)+"";
                    String[] arr=s.split(".mp3");
                    txtHien.setText(arr[0]);
                    List1.setSelectedIndex(i);
                }
            }
        
            for(BaiHat as:bh){
                if(as.getTenBai().equalsIgnoreCase(txtHien.getText()+".mp3")){
                    player=new MP3Player();
                    File f=new File(as.getDuongDan());
                    player.addToPlayList(f);
                    player.play();
                    btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/pause_30px.png")));
                    txtPlay.setText("3");
                    btnPlay.setToolTipText("Pause");
                    s1=as.getDuongDan();
                    
                    String[] arr=txtHien.getText().split(" - ");
                    txtTenBai.setText(arr[0]);
                    txtTacGia.setText(arr[1]);
                    
                }
            }
            
            f1=new File(s1);
                time=new Thread(){
                    @Override
                    synchronized public void run(){
                        int n=0;
                        boolean f=true;
                        while(true){
                            for(int i=0;i<=playMe(f1);i++){
                                if(i<10){
                                    txtTime1.setText(n+":"+"0"+i);
                                }
                                else {
                                    if(i==60){
                                        n+=1;
                                        i=0;
                                    }
                                    if(n*60+i == playMe(f1)+1){
                                        ArrayList<String> st=new ArrayList<String>();
                                        for(BaiHat as:bh){
                                            st.add(as.getTenBai());
                                        }

                                        for(int k=0;k<st.size();k++){
                                            if(st.get(k).equals(txtHien.getText()+".mp3")==true){
                                                String s=st.get(k+1)+"";
                                                String[] arr=s.split(".mp3");
                                                txtHien.setText(arr[0]);
                                                List1.setSelectedIndex(k+1);
                                                break;
                                            }
                                            else if(st.get(st.size()-1).equals(txtHien.getText()+".mp3")==true){
                                                String s=st.get(k)+"";
                                                String[] arr=s.split(".mp3");
                                                txtHien.setText(arr[0]);
                                                List1.setSelectedIndex(k);
                                            }
                                        }
                                        String s2="";
                                        for(BaiHat as:bh){
                                            if(as.getTenBai().equalsIgnoreCase(txtHien.getText()+".mp3")){
                                                player=new MP3Player();
                                                File f11=new File(as.getDuongDan());
                                                player.addToPlayList(f11);
                                                player.play();
                                                btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/pause_30px.png")));
                                                txtPlay.setText("3");
                                                btnPlay.setToolTipText("Pause");
                                                s2=as.getDuongDan();

                                                String[] arr=txtHien.getText().split(" - ");
                                                txtTenBai.setText(arr[0]);
                                                txtTacGia.setText(arr[1]);

                                            }
                                        }
                                        f2=new File(s2);
                                        f1=f2;
                                        txtTime2.setText(playMe(f2)/60+":"+(playMe(f2)-(playMe(f2)/60)*60));
                                        n=0;
                                        i=0;
                                        break;
                                        }
                                    txtTime1.setText(n+":"+i+"");
                                }
                                try {
                                    sleep(1000);
                                } catch (InterruptedException ex) {
                                    Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                        }
                    }
                };
                time.start();
                txtTime2.setText(playMe(f1)/60+":"+(playMe(f1)-(playMe(f1)/60)*60));
    }//GEN-LAST:event_btnNextMouseClicked

    private void btnNextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNextMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNextMouseEntered

    private void btnRepeatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRepeatMouseClicked
        String s1="";
        String s="";
        ArrayList<String> ar=new ArrayList<String>();
        if(txtRepeat.getText().equals("1")==true){
            String[] as=txtTime1.getText().split(":");
            int n=Integer.parseInt(as[0]);
            int i=Integer.parseInt(as[1]);
            int m=n*60+i;
            btnRepeat.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/reset_25px1.png")));
            txtRepeat.setText("2");
            if(time.isAlive()==true){
                time.stop();
            }
            
            for(BaiHat as1:bh){
                ar.add(as1.getTenBai());
            }

            for(int ii=0;ii<ar.size();ii++){
                s=ar.get(0);
            }

            for(BaiHat as1:bh){
                if(as1.getTenBai().equalsIgnoreCase(s)==true){
                    s1=as1.getDuongDan();
                }
            }

            f1=new File(s1);
            time=new Thread(){
                @Override
                synchronized public void run(){
                    int n=0;
                    int z=m;
                    boolean f=true;
                    while(true){
                        for(int i=z;i<=playMe(f1);i++){
                            if(i<10){
                                txtTime1.setText(n+":"+"0"+i);
                            }
                            else {
                                if(i==60){
                                    n+=1;
                                    i=0;
                                }
                                if(n*60+i == playMe(f1)+1){
                                    player.stop();
                                    for(BaiHat as:bh){
                                        if(as.getTenBai().equalsIgnoreCase(txtHien.getText()+".mp3")==true){
                                            player=new MP3Player();
                                            File f3=new File(as.getDuongDan());
                                            player.addToPlayList(f3);
                                            player.play();
                                            String[] arr=as.getTenBai().split(".mp3");
                                            txtHien.setText(arr[0]);

                                            String[] arr1=arr[0].split(" - ");
                                            txtTacGia.setText(arr1[1]);
                                            txtTenBai.setText(arr1[0]);
                                            List1.setSelectedValue(txtHien.getText(), true);
                                            btnPlay.setToolTipText("Pause");
                                            System.out.println(txtHien.getText());
                                            }
                                        }
                                    txtTime2.setText(playMe(f1)/60+":"+(playMe(f1)-(playMe(f1)/60)*60));
                                    n=0;
                                    z=0;
                                    i=0;
                                    break;
                                }
                                txtTime1.setText(n+":"+i+"");
                            }
                            try {
                                sleep(1000);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                }
            };
            time.start();
            txtTime2.setText(playMe(f1)/60+":"+(playMe(f1)-(playMe(f1)/60)*60));
            
        }
        else if(txtRepeat.getText().equals("2")==true){
            btnRepeat.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/reset_25px.png")));
            txtRepeat.setText("1");
            if(time.isAlive()==true){
                time.stop();
            }
            String[] as=txtTime1.getText().split(":");
            int n=Integer.parseInt(as[0]);
            int i=Integer.parseInt(as[1]);
            int m=n*60+i;
            if(m>0){
            
            for(BaiHat as1:bh){
                ar.add(as1.getTenBai());
            }

            for(int ii=0;ii<ar.size();ii++){
                s=ar.get(0);
            }

            for(BaiHat as1:bh){
                if(as1.getTenBai().equalsIgnoreCase(s)==true){
                    s1=as1.getDuongDan();
                }
            }

            f1=new File(s1);
            time=new Thread(){
                @Override
                synchronized public void run(){
                    int n=0;
                    int z=m;
                    boolean f=true;
                    while(true){
                        for(int i=z;i<=playMe(f1);i++){
                            if(i<10){
                                txtTime1.setText(n+":"+"0"+i);
                            }
                            else {
                                if(i==60){
                                    n+=1;
                                    i=0;
                                }
                                else if(n*60+i == playMe(f1)+1){
                                    player.stop();
                                    ArrayList<String> st=new ArrayList<String>();
                                        for(BaiHat as:bh){
                                            st.add(as.getTenBai());
                                        }

                                        for(int k=0;k<st.size();k++){
                                            if(st.get(k).equals(txtHien.getText()+".mp3")==true){
                                                String s=st.get(k+1)+"";
                                                String[] arr=s.split(".mp3");
                                                txtHien.setText(arr[0]);
                                                List1.setSelectedIndex(k+1);
                                                break;
                                            }
                                            else if(st.get(st.size()-1).equals(txtHien.getText()+".mp3")==true){
                                                String s=st.get(k)+"";
                                                String[] arr=s.split(".mp3");
                                                txtHien.setText(arr[0]);
                                                List1.setSelectedIndex(k);
                                            }
                                        }
                                        String s2="";
                                        for(BaiHat as:bh){
                                            if(as.getTenBai().equalsIgnoreCase(txtHien.getText()+".mp3")){
                                                player=new MP3Player();
                                                File f11=new File(as.getDuongDan());
                                                player.addToPlayList(f11);
                                                player.play();
                                                btnPlay.setIcon(new ImageIcon(getClass().getResource("/Music/IMG/pause_30px.png")));
                                                txtPlay.setText("3");
                                                btnPlay.setToolTipText("Pause");
                                                s2=as.getDuongDan();

                                                String[] arr=txtHien.getText().split(" - ");
                                                txtTenBai.setText(arr[0]);
                                                txtTacGia.setText(arr[1]);

                                            }
                                        }
                                        f2=new File(s2);
                                        f1=f2;
                                        txtTime2.setText(playMe(f2)/60+":"+(playMe(f2)-(playMe(f2)/60)*60));
                                        n=0;
                                        z=0;
                                        i=0;
                                        break;
                                    
                                }
                                txtTime1.setText(n+":"+i+"");
                            }
                            try {
                                sleep(1000);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                }
            };
            time.start();
            txtTime2.setText(playMe(f1)/60+":"+(playMe(f1)-(playMe(f1)/60)*60));
            }
        }
    }//GEN-LAST:event_btnRepeatMouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        JFileChooser jf=new JFileChooser();
        jf.setFileFilter(new FileTypeFilter(".mp3", "Open MP3 Files Only!"));
        if(jf.showOpenDialog(null)==JFileChooser.APPROVE_OPTION){
            try {
                File f=jf.getSelectedFile();
                String s=f.getName();
                String s1=f.getCanonicalPath();
                BaiHat a=new BaiHat(s, s1);
                bh.add(a);
                String[] arr=s.split(".mp3");
                dl.addElement(arr[0]);
                List1.setModel(dl);
                File file=new File("List.t");
                PrintWriter pr=new PrintWriter(file);
                for(BaiHat as:bh){
                    pr.println(as.toString());
                }
                pr.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_jLabel11MouseClicked

    private void btnVolumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolumMouseClicked

    }//GEN-LAST:event_btnVolumMouseClicked

    private void chinhLoaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chinhLoaStateChanged
        float valueToPlusMinus =Float.parseFloat(chinhLoa.getValue()+"")/10;
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        for(Mixer.Info mixerInfo : mixers){
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            for(Line.Info lineInfo : lineInfos){
                Line line = null;
                boolean opened = true;
                try{
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    if(!opened){
                        line.open();
                    }
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    float currentVolume = volControl.getValue();
                    System.out.println(currentVolume);
                    volControl.setValue((float)valueToPlusMinus);

                }catch (LineUnavailableException lineException){
                }catch (IllegalArgumentException illException){
                }finally{
                    if(line != null && !opened){
                        line.close();
                    }
                }
            }
        }
    }//GEN-LAST:event_chinhLoaStateChanged
    private int playMe(File file){
        int duration=0;
        try{
            AudioFile audioFile = AudioFileIO.read(file);
            duration= audioFile.getAudioHeader().getTrackLength(); ;
      }catch(Exception e){

       System.out.print("ERROR "+e);
      }
        return (int) duration;
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> List1;
    private javax.swing.JLabel btnNext;
    private javax.swing.JLabel btnPlay;
    private javax.swing.JLabel btnPrevious;
    private javax.swing.JLabel btnRepeat;
    private javax.swing.JLabel btnVolum;
    private javax.swing.JSlider chinhLoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel txtHien;
    private javax.swing.JLabel txtPlay;
    private javax.swing.JLabel txtRepeat;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTenBai;
    private javax.swing.JLabel txtTime1;
    private javax.swing.JLabel txtTime2;
    // End of variables declaration//GEN-END:variables
}
